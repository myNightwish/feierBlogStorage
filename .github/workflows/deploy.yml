name: Hexo Deploy

# 只监听 master 分支的改动
on:
  push:
    branches: [master]

jobs:
  build-and-deploy:
    runs-on: ubuntu-latest
    steps:
      - name: Checkout
        uses: actions/checkout@v2
        # 主题文件夹，如果你的主题不是 git submodule 可以不配置
      - name: Checkout theme repo
        uses: actions/checkout@v2 
        with:
            repository: jerryc127/hexo-theme-butterfly
            ref: master
            path: themes/butterfly
      
        

      # 这里用的是 Node.js 12.x
      - name: Setup Node.js
        uses: actions/setup-node@v1
        with:
            node-version: '14'
        # 缓存 Node 模块，提高构建速度
      - name: Get yarn cache directory path
        id: yarn-cache-dir-path
        run: echo "::set-output name=dir::$(yarn cache dir)"
      - name: Use yarn cache
        uses: actions/cache@v2
        id: yarn-cache
        with:
            path: ${{ steps.yarn-cache-dir-path.outputs.dir }}
            key: ${{ runner.os }}-yarn-${{ hashFiles('**/yarn.lock') }}
            restore-keys: |
              ${{ runner.os }}-yarn-

      # 安装依赖，我这里使用了 pandoc 渲染页面，所以先安装了 pandoc 再安装 Node 模块
      - name: Install dependencies
      run: 
          wget https://github.com/jgm/pandoc/releases/download/2.10.1/pandoc-2.10.1-1-amd64.deb
          sudo dpkg -i pandoc-2.10.1-1-amd64.deb
          yarn install --prefer-offline --frozen-lockfile

      # 从之前设置的 secret 获取部署私钥
      - name: Set up environment
      env:
        DEPLOY_KEY: ${{ secrets.DEPLOY_KEY }}
        run: |
          sudo timedatectl set-timezone "Asia/Shanghai"
          mkdir -p ~/.ssh
          echo "$DEPLOY_KEY" > ~/.ssh/id_rsa
          chmod 600 ~/.ssh/id_rsa
          ssh-keyscan github.com >> ~/.ssh/known_hosts

      # 生成并部署
      - name: Deploy
        run: |
          npx hexo clean && npx hexo g && npx hexo d




# This is a basic workflow to help you get started with Actions

# name: CI #temp stop

# # Controls when the workflow will run
# on:
#   # Triggers the workflow on push or pull request events but only for the main branch
#   push:
#     branches: [ master ]
#   pull_request:
#     branches: [ master ]

#   # Allows you to run this workflow manually from the Actions tab
#   workflow_dispatch:

# # A workflow run is made up of one or more jobs that can run sequentially or in parallel
# jobs:
#   # This workflow contains a single job called "build"
#   build:
#     # The type of runner that the job will run on
#     runs-on: ubuntu-latest

#     # Steps represent a sequence of tasks that will be executed as part of the job
#     steps:
#       - name: Checkout source
#         uses: actions/checkout@v1
#         with:
#             ref: master

#       - name: Setup Node.js
#         uses: actions/setup-node@v1
#         with:
#               node-version: '12'


#       - name: Setup Hexo
#         env: 
#                 # HEXO_DEPLOY_PRI_XIAOXIN_WINDOW 这个就是配置hexo仓库secrets的name，一定要对应上
#                 ACTION_DEPLOY_KEY: ${{ secrets.DEPLOY_KEY }}
#         run: |
#                     mkdir -p ~/.ssh/
#                     echo "$DEPLOY_KEY"> ~/.ssh/id_rsa
#                     chmod 700 ~/.ssh
#                     chmod 600 ~/.ssh/id_rsa
#                     echo "$DEPLOY_KEY" > ~/.ssh/id_rsa
#                     ssh-keyscan github.com >> ~/.ssh/known_hosts
#                     git config --global user.email 'zml_byr@bupt.edu.cn'
#                     git config --global user.name 'myNightwish'
#                     npm install hexo-cli -g
#                     npm install
#       - name: Deploy
#         run: |
#             hexo clean
#             hexo generate
#             hexo deploy





# # This is a basic workflow to help you get started with Actions

# name: Blog deploy

# # Controls when the workflow will run
# on:
#   # Triggers the workflow on push or pull request events but only for the main branch
#   push:
#     branches: [ master ]

#   # Allows you to run this workflow manually from the Actions tab
#   workflow_dispatch:

# # A workflow run is made up of one or more jobs that can run sequentially or in parallel
# jobs:
#   # This workflow contains a single job called "build"
#   build-and-deploy:
#     # The type of runner that the job will run on
#     runs-on: ubuntu-latest

#     # Steps represent a sequence of tasks that will be executed as part of the job
#     steps:
#       # Checks-out your repository under $GITHUB_WORKSPACE, so your job can access it
#       - uses: actions/checkout@v2

#       # Runs a set of commands using the runners shell
#       - name: Set Node.js
#         uses: actions/setup-node@v1
#         with:
#           node-version: '12'

#       # Cache node modules to accelerate
#       - name: Get yarn cache directory path
#         id: yarn-cache-dir-path
#         run: echo "::set-output name=dir::$(yarn cache dir)"

#       - name: Use yarn cache
#         uses: actions/cache@v2
#         id: yarn-cache
#         with:
#           path: ${{ steps.yarn-cache-dir-path.outputs.dir }}
#           key: ${{ runner.os }}-yarn-${{ hashFiles('**/yarn.lock') }}
#           restore-keys: |
#             ${{ runner.os }}-yarn-

#       - name: Install dependencies
#         run: yarn install --prefer-offline --frozen-lockfile

#       - name: Set up environment
#         env:
#           DEPLOY_KEY: ${{ secrets.DEPLOY_KEY }}
#         run: |
#           sudo timedatectl set-timezone "Asia/Shanghai"
#           mkdir -p ~/.ssh
#           echo "$DEPLOY_KEY" > ~/.ssh/id_rsa
#           chmod 600 ~/.ssh/id_rsa
#           ssh-keyscan github.com >> ~/.ssh/known_hosts
#           git config --global user.email 'zml_byr@bupt.edu.cn'
#           git config --global user.name 'myNightwish'
#           npm install hexo-cli -g
#           npm install

#       - name: Deploy
#         run: |
#             hexo clean
#             hexo generate
#             hexo deploy